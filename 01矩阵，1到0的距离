int dx[4] = {1,-1,0,0},dy[4]={0,0,1,-1};
class Solution {
public:
    vector<vector<int>> updateMatrix(vector<vector<int>>& mat) {
    int m = mat.size(),n = mat[0].size();
    vector<vector<int>>ans(m,vector<int>(n,0));
    queue<pair<int,int>>Q;
    for(int i = 0 ; i < m ; i++)
    {
        for(int j = 0 ; j < n ; j++)
        {
            if(!mat[i][j])
            Q.push({i,j});                           //把所有0装进来
        }
    }
    //Bfs
    int res = 0;                                   //记录当前搜索层次
    while(!Q.empty())
    {
        res++;
        int size = Q.size();
        while(size--)
        {
            int x0 = Q.front().first,y0 = Q.front().second;
            for(int i = 0 ; i < 4 ; i++)
            {
                int x = x0+dx[i],y=y0+dy[i];
                if(x<0||x>=m||y<0||y>=n||mat[x][y]==0)//遇到0跳过
                continue;
                mat[x][y] = 0;          //把他变成0，下次就不会再次搜索了
                ans[x][y] = res;   
                Q.push({x,y});
            }
            Q.pop();
        }
    }
    return ans;
    }
};
